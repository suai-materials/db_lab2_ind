using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Data;
using DbContext;


namespace SuperDBApp;

public partial class TableView : Page
{
    private string tableName;
    private List<DataGridColumn> _toDelete = new();
    

    public TableView()
    {
        InitializeComponent();
    }

    /**
     * Отображение таблиц
     */
    public TableView(string tableName = "") : this()
    {
        this.tableName = tableName;
        /*data = Constants.DbDataContext.GetType().GetProperty(Constants.NameToTableName[tableName]!)
            .GetValue(Constants.DbDataContext);

        
        t = dbSetType.MakeGenericType(data.GetType().GetProperty("EntityType").GetValue(data).GetType());
        */

        // Я люблю C#.(нет)
        switch (tableName)
        {
            case "Сотрудники":
                DataG.ItemsSource = Constants.DbDataContext.Employees.ToList();
                break;
            case "Компоненты":
                DataG.ItemsSource = Constants.DbDataContext.Components.ToList();
                break;
            case "Должности":
                DataG.ItemsSource = Constants.DbDataContext.Positions.ToList();
                break;
            case "Заказы":
                DataG.ItemsSource = Constants.DbDataContext.Orders.ToList();
                break;
            case "Сервисы":
                DataG.ItemsSource = Constants.DbDataContext.Services.ToList();
                break;
            case "Заказчики":
                DataG.ItemsSource = Constants.DbDataContext.Customers.ToList();
                break;
            case "Заказчики и их заказы":
                DataG.ItemsSource = Constants.DbDataContext.CustomerOrders.ToList();
                break;
            case "Производитель и компоненты":
                DataG.ItemsSource = Constants.DbDataContext.Manufacture2Components.ToList();
                break;
        }
    }

    private void TheDataGrid_OnAutoGeneratingColumn(object? sender, DataGridAutoGeneratingColumnEventArgs e)
    {
        Console.WriteLine();
        if (e.PropertyType.AssemblyQualifiedName!.Contains("System.Collections.Generic") ||
            e.PropertyType.AssemblyQualifiedName!.Contains("DbContext"))
            _toDelete.Add(e.Column);
    }

    private void OnEdit(object? sender, EventArgs e)
    {
        switch (tableName)
        {
            case "Сотрудники":
                Constants.Frame.Navigate(
                    new AddEmployee(Constants.DbDataContext.Employees.Find((long) ((Button) sender!).Tag)!));
                break;
            case "Компоненты":
                Constants.Frame.Navigate(
                    new AddComponent(Constants.DbDataContext.Components.Find((long) ((Button) sender!).Tag)!));
                break;
            
        }
    }

    private void DataG_OnAutoGeneratedColumns(object? sender, EventArgs e)
    {
        foreach (var dataGridColumn in _toDelete) DataG.Columns.Remove(dataGridColumn);

        if (tableName == "Сотрудники" || tableName == "Компоненты")
        {
            var dataGridColTem = new DataGridTemplateColumn();
            DataTemplate dataTemplate = new();
            var factory1 = new FrameworkElementFactory(typeof(Button));
            factory1.SetValue(ContentControl.ContentProperty, "Изменить");
            factory1.AddHandler(ButtonBase.ClickEvent, new RoutedEventHandler(OnEdit));
            Binding binding = new("Id");
            binding.Mode = BindingMode.Default;
            factory1.SetValue(TagProperty, binding);
            dataTemplate.VisualTree = factory1;
            dataGridColTem.CellTemplate = dataTemplate;

            DataG.Columns.Add(dataGridColTem);
        }
    }

    private void Delete_OnClick(object sender, RoutedEventArgs e)
    {
        if (DataG.SelectedItems.Count == 0)
        {
            MessageBox.Show("Для удаления выделите хотя бы один элемент");
        }
        else
        {
            if (MessageBox.Show($"Вы точно хотите удалить {DataG.SelectedItems.Count} элементов?", "",
                    MessageBoxButton.YesNo) == MessageBoxResult.No)
                return;
            switch (tableName)
            {
                case "Сотрудники":
                    foreach (var employee in DataG.SelectedItems)
                        Constants.DbDataContext.Employees.Remove((Employee) employee);
                    break;
                case "Компоненты":
                    foreach (var component in DataG.SelectedItems)
                        Constants.DbDataContext.Components.Remove((Component) component);
                    break;
                case "Должности":
                    foreach (var postition in DataG.SelectedItems)
                        Constants.DbDataContext.Positions.Remove((Position) postition);
                    break;
                case "Заказы":
                    foreach (var order in DataG.SelectedItems)
                        Constants.DbDataContext.Orders.Remove((Order) order);
                    break;
                case "Сервисы":
                    foreach (var service in DataG.SelectedItems)
                        Constants.DbDataContext.Services.Remove((Service) service);
                    break;
                case "Заказчики":
                    foreach (var service in DataG.SelectedItems)
                        Constants.DbDataContext.Customers.Remove((Customer) service);
                    break;
            }

            Constants.DbDataContext.SaveChanges();
            Constants.MainWindowViewModel.ChangeToView(tableName);
        }
    }
}